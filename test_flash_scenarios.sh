#!/bin/bash

# Test Flash Model MCP Scenarios
# 8 konkr√©tn√≠ch testovac√≠ch sc√©n√°≈ô≈Ø od Flash modelu

set -e

SERVER_URL="http://127.0.0.1:3000/mcp"
OUTPUT_FILE="flash_test_results.json"

echo "üß™ MCP Flash Model Test Scenarios"
echo "================================="
echo "Server: $SERVER_URL"
echo "Output: $OUTPUT_FILE"
echo ""

# Inicializace v√Ωsledkov√©ho souboru
echo "[]" > $OUTPUT_FILE

# Funkce pro vol√°n√≠ MCP
call_mcp() {
    local method=$1
    local params=$2
    local id=$3
    local description=$4
    
    echo "üì° Test #$id: $description"
    echo "   Method: $method"
    
    local response=$(curl -s -X POST $SERVER_URL \
        -H "Content-Type: application/json" \
        -d "{\"jsonrpc\":\"2.0\",\"id\":$id,\"method\":\"$method\",\"params\":$params}")
    
    # P≈ôid√°n√≠ do v√Ωsledk≈Ø  
    local temp_result=$(echo "$response" | jq -r .)
    jq --argjson new_entry "{\"test_id\":$id,\"method\":\"$method\",\"description\":\"$description\",\"request_params\":$params,\"response\":$temp_result}" '. += [$new_entry]' $OUTPUT_FILE > temp.json && mv temp.json $OUTPUT_FILE
    
    echo "   Response: $response"
    echo ""
    
    return 0
}

echo "üéØ Sc√©n√°≈ô 1: Z√°kladn√≠ CRUD operace a archivace"
echo "==============================================="

call_mcp "create_task" '{
    "code": "CRUD-001",
    "name": "Testovac√≠ √∫kol pro CRUD",
    "description": "Popis √∫kolu pro testov√°n√≠ z√°kladn√≠ch operac√≠.",
    "owner_agent_name": "AgentX"
}' 1 "Vytvo≈ôen√≠ √∫kolu CRUD-001"

call_mcp "get_task_by_id" '{"id": 1}' 2 "Z√≠sk√°n√≠ √∫kolu podle ID"

call_mcp "update_task" '{
    "id": 1,
    "description": "Aktualizovan√Ω popis √∫kolu po revizi.",
    "owner_agent_name": "AgentY"
}' 3 "Aktualizace √∫kolu"

call_mcp "get_task_by_code" '{"code": "CRUD-001"}' 4 "Z√≠sk√°n√≠ √∫kolu podle k√≥du"

call_mcp "archive_task" '{"id": 1}' 5 "Archivace √∫kolu"

call_mcp "get_task_by_id" '{"id": 1}' 6 "Kontrola archivovan√©ho √∫kolu"

echo "ü§ù Sc√©n√°≈ô 2: Koordinace v√≠ce agent≈Ø a pracovn√≠ relace"
echo "====================================================="

call_mcp "create_task" '{
    "code": "AGENT-WORK-001",
    "name": "√ökol pro AgentA",
    "description": "Tento √∫kol vy≈æaduje schopnosti coding a testing.",
    "owner_agent_name": null
}' 7 "Vytvo≈ôen√≠ nep≈ôi≈ôazen√©ho √∫kolu"

call_mcp "discover_work" '{
    "agent_name": "AgentA",
    "capabilities": ["coding", "testing"],
    "max_tasks": 5
}' 8 "Objeven√≠ pr√°ce pro AgentA"

call_mcp "claim_task" '{
    "task_id": 2,
    "agent_name": "AgentA"
}' 9 "Zabr√°n√≠ √∫kolu AgentA"

call_mcp "start_work_session" '{
    "task_id": 2,
    "agent_name": "AgentA"
}' 10 "Spu≈°tƒõn√≠ pracovn√≠ relace"

call_mcp "end_work_session" '{
    "session_id": 2,
    "notes": "Work completed successfully",
    "productivity_score": 0.95
}' 11 "Ukonƒçen√≠ pracovn√≠ relace"

call_mcp "release_task" '{
    "task_id": 2,
    "agent_name": "AgentA"
}' 12 "Uvolnƒõn√≠ √∫kolu"

call_mcp "get_task_by_id" '{"id": 2}' 13 "Kontrola uvolnƒõn√©ho √∫kolu"

echo "‚ùå Sc√©n√°≈ô 3: Operace s neexistuj√≠c√≠m √∫kolem"
echo "=========================================="

call_mcp "get_task_by_id" '{"id": 9999}' 14 "Pokus o z√≠sk√°n√≠ neexistuj√≠c√≠ho √∫kolu"

call_mcp "update_task" '{
    "id": 9999,
    "name": "Neexistuj√≠c√≠ √∫kol",
    "description": "Tento √∫kol neexistuje."
}' 15 "Pokus o aktualizaci neexistuj√≠c√≠ho √∫kolu"

call_mcp "set_task_state" '{
    "id": 9999,
    "state": "Done"
}' 16 "Pokus o zmƒõnu stavu neexistuj√≠c√≠ho √∫kolu"

call_mcp "archive_task" '{"id": 9999}' 17 "Pokus o archivaci neexistuj√≠c√≠ho √∫kolu"

call_mcp "claim_task" '{
    "task_id": 9999,
    "agent_name": "AgentNotFound"
}' 18 "Pokus o zabr√°n√≠ neexistuj√≠c√≠ho √∫kolu"

echo "üîÑ Sc√©n√°≈ô 4: Neplatn√© p≈ôechody stav≈Ø √∫kolu"
echo "========================================="

call_mcp "create_task" '{
    "code": "INVALID-STATE-001",
    "name": "√ökol pro test neplatn√Ωch stav≈Ø",
    "description": "Testuje neplatn√© p≈ôechody stav≈Ø.",
    "owner_agent_name": null
}' 19 "Vytvo≈ôen√≠ √∫kolu pro test stav≈Ø"

call_mcp "set_task_state" '{
    "id": 3,
    "state": "Done"
}' 20 "Pokus o p≈ôechod Created ‚Üí Done"

call_mcp "set_task_state" '{
    "id": 3,
    "state": "Archived"
}' 21 "Pokus o p≈ôechod Created ‚Üí Archived"

call_mcp "set_task_state" '{
    "id": 3,
    "state": "InProgress"
}' 22 "P≈ôechod Created ‚Üí InProgress"

call_mcp "set_task_state" '{
    "id": 3,
    "state": "Created"
}' 23 "Pokus o p≈ôechod InProgress ‚Üí Created"

echo "üåà Sc√©n√°≈ô 5: Kompletn√≠ ≈æivotn√≠ cyklus √∫kolu"
echo "==========================================="

call_mcp "create_task" '{
    "code": "FULL-CYCLE-001",
    "name": "Kompletn√≠ ≈æivotn√≠ cyklus √∫kolu",
    "description": "Testuje pln√Ω ≈æivotn√≠ cyklus √∫kolu s blokov√°n√≠m a p≈ôe≈ôazen√≠m.",
    "owner_agent_name": "AgentAlpha"
}' 24 "Vytvo≈ôen√≠ √∫kolu pro full cycle"

call_mcp "set_task_state" '{"id": 4, "state": "InProgress"}' 25 "P≈ôechod na InProgress"

call_mcp "set_task_state" '{"id": 4, "state": "Blocked"}' 26 "P≈ôechod na Blocked"

call_mcp "set_task_state" '{"id": 4, "state": "InProgress"}' 27 "N√°vrat na InProgress"

call_mcp "assign_task" '{
    "id": 4,
    "new_owner": "AgentBeta"
}' 28 "P≈ôi≈ôazen√≠ jin√©mu agentovi"

call_mcp "set_task_state" '{"id": 4, "state": "Review"}' 29 "P≈ôechod na Review"

call_mcp "set_task_state" '{"id": 4, "state": "Done"}' 30 "P≈ôechod na Done"

call_mcp "archive_task" '{"id": 4}' 31 "Archivace dokonƒçen√©ho √∫kolu"

call_mcp "get_task_by_id" '{"id": 4}' 32 "Kontrola fin√°ln√≠ho stavu"

echo "üìã Sc√©n√°≈ô 6: Filtrov√°n√≠ a str√°nkov√°n√≠ seznamu √∫kol≈Ø"
echo "===================================================="

# Vytvo≈ôen√≠ testovac√≠ch √∫kol≈Ø
call_mcp "create_task" '{
    "code": "FILTER-001",
    "name": "√ökol pro AgentA - Created",
    "description": "Popis √∫kolu 1.",
    "owner_agent_name": "AgentA"
}' 33 "Vytvo≈ôen√≠ √∫kolu pro AgentA"

call_mcp "create_task" '{
    "code": "FILTER-002",
    "name": "√ökol pro AgentB - Created",
    "description": "Popis √∫kolu 2.",
    "owner_agent_name": "AgentB"
}' 34 "Vytvo≈ôen√≠ √∫kolu pro AgentB"

call_mcp "create_task" '{
    "code": "FILTER-003", 
    "name": "√ökol pro AgentA - InProgress",
    "description": "Popis √∫kolu 3.",
    "owner_agent_name": "AgentA"
}' 35 "Vytvo≈ôen√≠ dal≈°√≠ho √∫kolu pro AgentA"

call_mcp "set_task_state" '{"id": 7, "state": "InProgress"}' 36 "Zmƒõna stavu na InProgress"

# Testov√°n√≠ filtrov√°n√≠
call_mcp "list_tasks" '{}' 37 "Seznam v≈°ech √∫kol≈Ø"

call_mcp "list_tasks" '{"owner": "AgentA"}' 38 "√ökoly pro AgentA"

call_mcp "list_tasks" '{"state": "InProgress"}' 39 "√ökoly ve stavu InProgress"

call_mcp "list_tasks" '{
    "owner": "AgentA",
    "state": "Created"
}' 40 "√ökoly pro AgentA ve stavu Created"

call_mcp "list_tasks" '{
    "limit": 1,
    "offset": 0
}' 41 "Prvn√≠ √∫kol se str√°nkov√°n√≠m"

echo "‚ö° Sc√©n√°≈ô 7: Simulace konfliktu p≈ôi zab√≠r√°n√≠ √∫kolu"
echo "=================================================="

call_mcp "create_task" '{
    "code": "CLAIM-CONFLICT-001",
    "name": "√ökol pro test konfliktu zabr√°n√≠",
    "description": "Testuje, co se stane, kdy≈æ dva agenti zab√≠raj√≠ stejn√Ω √∫kol.",
    "owner_agent_name": null
}' 42 "Vytvo≈ôen√≠ √∫kolu pro konflikt test"

call_mcp "claim_task" '{
    "task_id": 8,
    "agent_name": "AgentA"
}' 43 "AgentA zab√≠r√° √∫kol"

call_mcp "claim_task" '{
    "task_id": 8,
    "agent_name": "AgentB"
}' 44 "AgentB pokus o zabr√°n√≠ stejn√©ho √∫kolu"

call_mcp "release_task" '{
    "task_id": 8,
    "agent_name": "AgentA"
}' 45 "AgentA uvol≈àuje √∫kol"

call_mcp "claim_task" '{
    "task_id": 8,
    "agent_name": "AgentB"
}' 46 "AgentB √∫spƒõ≈°nƒõ zab√≠r√° uvolnƒõn√Ω √∫kol"

echo "üîç Sc√©n√°≈ô 8: Kontrola stavu a zpracov√°n√≠ neplatn√Ωch parametr≈Ø"
echo "============================================================="

call_mcp "health_check" '{}' 47 "Kontrola stavu serveru"

call_mcp "create_task" '{
    "code": "INVALID-PARAMS-001",
    "description": "Tento √∫kol by mƒõl selhat kv≈Øli chybƒõj√≠c√≠mu n√°zvu."
}' 48 "Vytvo≈ôen√≠ √∫kolu s chybƒõj√≠c√≠m n√°zvem"

call_mcp "create_task" '{
    "code": "VALID-FOR-STATE-TEST",
    "name": "√ökol pro test neplatn√©ho stavu",
    "description": "Tento √∫kol bude pou≈æit pro pokus o nastaven√≠ neplatn√©ho stavu.",
    "owner_agent_name": null
}' 49 "Vytvo≈ôen√≠ platn√©ho √∫kolu"

call_mcp "set_task_state" '{
    "id": 9,
    "state": "InvalidStateString"
}' 50 "Pokus o nastaven√≠ neplatn√©ho stavu"

echo ""
echo "‚úÖ V≈°ech 8 sc√©n√°≈ô≈Ø dokonƒçeno!"
echo "üìä V√Ωsledky ulo≈æeny do: $OUTPUT_FILE"
echo ""
echo "üìà Souhrn test≈Ø:"
jq -r '.[] | "\(.test_id). \(.description) - \(if .response.result then "‚úÖ SUCCESS" elif .response.error then "‚ùå ERROR: \(.response.error.message)" else "‚ùì UNKNOWN" end)"' $OUTPUT_FILE

echo ""
echo "üéØ Test dokonƒçen - v√Ωsledky p≈ôipraveny pro Flash model!"